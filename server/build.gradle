version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'javafx-gradle-plugin'

sourceCompatibility = 1.8
targetCompatibility = 1.8

//repositories {
//    mavenCentral()
//    mavenLocal()
//    maven { url "https://jitpack.io" }
//}
buildscript {
    dependencies {
        classpath group: 'de.dynamicfiles.projects.gradle.plugins', name: 'javafx-gradle-plugin', version: '8.8.2'
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }
}

allprojects {
    repositories {
        jcenter()
        mavenCentral()
        mavenLocal()
    }
}
dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile 'com.jfoenix:jfoenix:1.9.0'
    compile 'de.jensd:fontawesomefx:8.9'
    compile 'io.datafx:datafx:8.0.1'
    compile 'io.datafx:flow:8.0.1'
    compile 'commons-io:commons-io:2.5'

    //Dependency Injection
    compile 'com.gluonhq:ignite-dagger:1.0.2'
    compile 'javax.inject:javax.inject:1'

    //rx
    compile 'io.reactivex.rxjava2:rxjavafx:2.2.0'
    compile 'com.mindorks.nybus:nybus-java:1.0.0'
    // gson
    compile 'com.google.code.gson:gson:2.8.2'

    compile "log4j:log4j:1.2.17"
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'


}

idea.module.downloadJavadoc = true
ext.buildTimestamp = new Date().format('yyyy-MM-dd HH:mm:ss')

jfx {
    verbose = true
    mainClass = "main.Main"
    jfxAppOutputDir = "build/jfx/app"
    jfxMainAppJarName = "project-jfx.jar"
    deployDir = "src/main/deploy"
    useEnvironmentRelativeExecutables = true
    libFolderName = "lib"

// gradle jfxJar
    css2bin = false
    preLoader = null // String
    updateExistingJar = false
    allPermissions = false
    manifestAttributes = null // Map<String, String>
    addPackagerJar = true
    copyAdditionalAppResourcesToJar = false
    skipCopyingDependencies = false
    useLibFolderContentForManifestClasspath = false
    fixedManifestClasspath = null

// gradle jfxRun
    runJavaParameter = null // String
    runAppParameter = null // String

// per default the outcome of the gradle "jarTask" will be used, set this to specify otherwise (like proguard-output)
    alternativePathToJarFile = null // String

// to disable patching of ant-javafx.jar, set this to false
    usePatchedJFXAntLib = true

// making it able to support absolute paths, defaults to "false" for maintaining old behaviour
    checkForAbsolutePaths = false
}
task wrapper(type: Wrapper) {
    gradleVersion = '3.0'
}